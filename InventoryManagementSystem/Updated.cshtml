
@model IEnumerable<InventoryManagementSystem.Models.Ingredient>



@{
    ViewBag.Title = "GenerateReport";
}

<h2>Weekly Totals</h2>
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table class="table">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.IngredientName)
            </th>
            <th>
                @Html.Raw("Amount Used")
            </th>
            <th></th>
        </tr>
        @{
            string dummyValue = "";
           <!-- IDictionary<InventoryManagementSystem.Models.Ingredient, int> IngredientsUsed = InventoryManagementSystem.DAL.Calculations.IngredientsUsedForWeek(); -->
            IDictionary<InventoryManagementSystem.Models.Ingredient, int> IngredientsUsed = InventoryManagementSystem.DAL.Calculations.IngredientsUsedForWeek(dummyValue);
            //update numbers in ingredients table  
            //This logic should most likely be moved...
            foreach (var ingredient in IngredientsUsed)
            {
                foreach (var item in Model)
                {
                    if (item.IngredientName == ingredient.Key.IngredientName)
                    {
                        item.AmountUsed = ingredient.Value;
                    }
                }
            }
           

            IList<double> WeeklyProfit = InventoryManagementSystem.DAL.Calculations.WeeklyProfit(IngredientsUsed);
            DateTime reportDate = DateTime.Now;
        }

        @foreach (var item in Model)
        {
<tr>
                <td>
                    @Html.DisplayFor(m => item.IngredientName)
                </td>
                <td>
                    @{
                        int Sold = IngredientsUsed.FirstOrDefault(s => s.Key.Id == item.Id).Value;
                    }
                    @*
                    @Html.EditorFor(m => IngredientsUsed.FirstOrDefault(s => s.Key.Id == item.Id).Value, null, "form" + item.IngredientName)
                    *@

                    @Html.DisplayFor(m => item.AmountUsed)

                    @*
                    @Html.Raw(@Sold)
                    *@
                </td>
            </tr>
                        }
        <!-- Insert lines for Extra Items here -->

    </table>
    <table class="table">
        <tr>
            <th>
                @Html.Raw("Weekly Total")
            </th>
            <th>
                @Html.Raw("in Dollars")
            </th>
            <th></th>
        </tr>
        <tr>
            <td>
                @Html.Raw("Cost of Ingredients")
            </td>
            <td>
                @Html.Raw(WeeklyProfit[0])
            </td>
        </tr>
        <tr>
            <td>
                @Html.Raw("Income from Sales")
            </td>
            <td>
                @Html.Raw(WeeklyProfit[1])
            </td>
        </tr>
        <tr>
            <td>
                @Html.Raw("Net Profit")
            </td>
            <td>
                @Html.Raw(WeeklyProfit[2])
            </td>
        </tr>
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="hidden" name="reportDate" value="@reportDate" />
            <input type="submit" value="Add Report to Database" class="btn btn-default" />
        </div>
    </div>
                        }